public class SearchArea {
    private int x1, y1, z1, x2, y2, z2;

    public SearchArea(int x1, int y1, int z1, int x2, int y2, int z2) {
        this.x1 = x1;
        this.y1 = y1;
        this.z1 = z1;
        this.x2 = x2;
        this.y2 = y2;
        this.z2 = z2;
    }

    public void divideAndSearch() {
        SearchArea topLeft = new SearchArea(x1, y1, z1, x1 + (getWidth() / 2), y2, z1 + (getHeight() / 2));
        SearchArea topRight = new SearchArea(x1 + (getWidth() / 2), y1, z1, x2, y2, z1 + (getHeight() / 2));
        SearchArea bottomLeft = new SearchArea(x1, y1, z1 + (getHeight() / 2), x1 + (getWidth() / 2), y2, z2);
        SearchArea bottomRight = new SearchArea(x1 + (getWidth() / 2), y1, z1 + (getHeight() / 2), x2, y2, z2);

        new Thread(() -> findPattern(topLeft)).start();
        new Thread(() -> findPattern(topRight)).start();
        new Thread(() -> findPattern(bottomLeft)).start();
        new Thread(() -> findPattern(bottomRight)).start();
    }

    private int getWidth() {
        return Math.abs(x1) + Math.abs(x2);
    }

    private int getHeight() {
        return Math.abs(z1) + Math.abs(z2);
    }

    private static void findPattern(SearchArea searchArea) {
        PatternSearch.findPattern(searchArea);
    }

    public int getX1() {
        return x1;
    }

    public int getY1() {
        return y1;
    }

    public int getZ1() {
        return z1;
    }

    public int getX2() {
        return x2;
    }

    public int getY2() {
        return y2;
    }

    public int getZ2() {
        return z2;
    }
}
